@using DevOpsMetrics.Service.Models.Common
@model List<LeadTimeForChangesModel>
@{
    ViewData["Title"] = "Lead time for changes";
}

<h2>Lead time for changes</h2>
<div class="row">
    @foreach (LeadTimeForChangesModel item in Model)
    {
        <div class="col-md-6">
            @await Html.PartialAsync("_LeadTimeForChanges", item)
        </div>
    }
</div>

<div class="row">
    <div class="col-md-12" style="font-size: 8pt;">
        <hr />
        <b>Lead time for changes performance rating table</b><br />
        <table class="table table-bordered">
            <tr>
                <th>Description</th>
                <th>Elite</th>
                <th>High</th>
                <th>Medium</th>
                <th>Low</th>
            </tr>
            <tr>
                <td>For the primary application or service you work on, what is the lead time for changes - how long does it take to go from code committed to code successfully running in production</td>
                <td>Less than one day</td>
                <td>Between one day and one week</td>
                <td>Between one week and one month</td>
                <td>Between one month and six months</td>
            </tr>
        </table>
    </div>
    <div class="col-md-12" style="font-size: 8pt;">
        <hr />
        <b>FAQ</b><br />
        <b>What am I looking at?</b><br />
        Lead time for changes is a high performing DevOps metric to measure the time it takes to change a line of code and deploy it to production. This page helps us to measure it across various projects in both Azure DevOps and GitHub<br />
        <b>How does it work?</b><br />
        We look at the number of pull requests completed, and within each pull request, the duration between the first and last commits, adding this to the average build time for the time period<br />
        <b>Assumptions/things we can't currently measure:</b><br />
        - We currently count the pull request and deployment durations, averaging them for the time period to create the lead time for changes metric.<br />
        - We start measuring at the first commit for a branch. Development is variable that depends on the task, and doesn't help with this measurement.<br />
        - We assume we are following a git flow process, creating feature branches and merging back to the master branch, which is deployed to production on the completion of pull requests<br />
        - We assume that the user requires pull requests to merge work into the master branch - we are looking at all work that is not on this master branch - hence we currently only support one master branch.<br />
        <br />
    </div>
</div>