{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "9632804549853203992"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    },
    "resourcesSuffix": {
      "type": "string",
      "defaultValue": ""
    },
    "azureDevOpsPatToken": {
      "type": "string",
      "defaultValue": ""
    },
    "gitHubClientId": {
      "type": "string",
      "defaultValue": ""
    },
    "gitHubClientSecret": {
      "type": "secureString",
      "defaultValue": ""
    }
  },
  "variables": {
    "resourceGroupName": "[format('rg-devopsmetrics-{0}', parameters('resourcesSuffix'))]",
    "managedIdentityName": "[format('app-id-devops-{0}', parameters('resourcesSuffix'))]",
    "keyVaultName": "[format('vault-devops-prd-eu-{0}', parameters('resourcesSuffix'))]",
    "storageName": "[format('stgdevopsprdeu{0}', parameters('resourcesSuffix'))]",
    "hostingName": "[format('hosting-devops-prd-eu-{0}', parameters('resourcesSuffix'))]",
    "appInsightsName": "[format('appinsights-devops-prd-eu-{0}', parameters('resourcesSuffix'))]",
    "serviceName": "[format('service-devops-prd-eu-{0}', parameters('resourcesSuffix'))]",
    "websiteName": "[format('web-devops-prd-eu-{0}', parameters('resourcesSuffix'))]",
    "functionName": "[format('function-devops-prd-eu-{0}', parameters('resourcesSuffix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-resourceGroupDeployment', variables('resourceGroupName'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceGroupName": {
            "value": "[variables('resourceGroupName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "11176205720013945755"
            }
          },
          "parameters": {
            "resourceGroupName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('resourceGroupName')]",
              "location": "[parameters('location')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deployment', variables('managedIdentityName'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "name": {
            "value": "[variables('managedIdentityName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "2302026822878937774"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), resourceGroup().id, 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))).principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "userAssignedManagedIdentityId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
            },
            "userAssignedManagedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))).principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-resourceGroupDeployment', variables('resourceGroupName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deployment', variables('keyVaultName'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "administratorUserPrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('managedIdentityName')))).outputs.userAssignedManagedIdentityPrincipalId.value]"
          },
          "storageAccountConnectionString": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('storageName')))).outputs.storageAccountConnectionString.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "4911125286896159313"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string"
            },
            "storageAccountConnectionString": {
              "type": "string"
            },
            "vaultAdminSecretsPermissions": {
              "type": "array",
              "defaultValue": [
                "all"
              ],
              "metadata": {
                "description": "Permissions to grant admin secrets in the vault. (Valid values are: all, get, set, list, and delete.)"
              }
            },
            "location": {
              "type": "string"
            },
            "vaultSku": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "SKU for the vault"
              }
            },
            "vaultEnabledForDeployment": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Specifies if the vault is enabled for VM or Service Fabric deployment"
              }
            },
            "vaultEnabledForTemplateDeployment": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Specifies if the vault is enabled for ARM template deployment"
              }
            },
            "administratorUserPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Object Id of the AAD user that will have admin access to the SQL server and the Key Vault. Available from the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2016-10-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "KeyVault"
              },
              "properties": {
                "enabledForDeployment": "[parameters('vaultEnabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('vaultEnabledForTemplateDeployment')]",
                "enableSoftDelete": true,
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "[parameters('vaultSku')]"
                },
                "accessPolicies": [
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[parameters('administratorUserPrincipalId')]",
                    "permissions": {
                      "secrets": "[parameters('vaultAdminSecretsPermissions')]"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'AppSettings--AzureStorageAccountConfigurationString')]",
              "properties": {
                "value": "[parameters('storageAccountConnectionString')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('managedIdentityName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('storageName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deployment', variables('storageName'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[variables('storageName')]"
          },
          "resourceGroupName": {
            "value": "[variables('resourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "4426991029467472857"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "storageAccountType": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
              ]
            },
            "storageAccountTier": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "Standard"
              ]
            },
            "resourceGroupName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2018-07-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "Storage Account"
              },
              "sku": {
                "name": "[parameters('storageAccountType')]",
                "tier": "[parameters('storageAccountTier')]"
              },
              "kind": "Storage",
              "properties": {
                "azureFilesAadIntegration": false,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "services": {
                    "file": {
                      "enabled": true
                    },
                    "blob": {
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                }
              }
            }
          ],
          "outputs": {
            "storageAccountConnectionString": {
              "type": "string",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), listKeys(resourceId(parameters('resourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-04-01').keys[0].value)]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-resourceGroupDeployment', variables('resourceGroupName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deployment', variables('hostingName'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "hostingPlanName": {
            "value": "[variables('hostingName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "11436016102670066349"
            }
          },
          "parameters": {
            "hostingPlanName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "hostingPlanSKUName": {
              "type": "string",
              "defaultValue": "B1",
              "allowedValues": [
                "D1",
                "B1",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
              ],
              "metadata": {
                "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
              }
            },
            "hostingPlanSKUCapacity": {
              "type": "int",
              "defaultValue": 1,
              "minValue": 1,
              "metadata": {
                "description": "Describes plan's instance count"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2015-08-01",
              "name": "[parameters('hostingPlanName')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "Hosting Plan"
              },
              "sku": {
                "name": "[parameters('hostingPlanSKUName')]",
                "capacity": "[parameters('hostingPlanSKUCapacity')]"
              },
              "properties": {
                "name": "[parameters('hostingPlanName')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-resourceGroupDeployment', variables('resourceGroupName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deployment', variables('appInsightsName'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "applicationInsightsName": {
            "value": "[variables('appInsightsName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "14778711069638568095"
            }
          },
          "parameters": {
            "applicationInsightsName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2015-05-01",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "Application Insights"
              },
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "Flow_Type": "Bluefield",
                "Request_Source": "rest",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            }
          ],
          "outputs": {
            "applicationInsightsInstrumentationKeyOutput": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-resourceGroupDeployment', variables('resourceGroupName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deployment', variables('serviceName'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "webSiteName": {
            "value": "[variables('serviceName')]"
          },
          "hostingPlanName": {
            "value": "[variables('hostingName')]"
          },
          "managedIdentityId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('managedIdentityName')))).outputs.userAssignedManagedIdentityId.value]"
          },
          "applicationInsightsInstrumentationKey": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('appInsightsName')))).outputs.applicationInsightsInstrumentationKeyOutput.value]"
          },
          "storageConnectionString": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('storageName')))).outputs.storageAccountConnectionString.value]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "azureDevOpsPatToken": {
            "value": "[parameters('azureDevOpsPatToken')]"
          },
          "gitHubClientId": {
            "value": "[parameters('gitHubClientId')]"
          },
          "gitHubClientSecret": {
            "value": "[parameters('gitHubClientSecret')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "11929086677771076163"
            }
          },
          "parameters": {
            "webSiteName": {
              "type": "string"
            },
            "hostingPlanName": {
              "type": "string"
            },
            "managedIdentityId": {
              "type": "string"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string"
            },
            "storageConnectionString": {
              "type": "string",
              "defaultValue": ""
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureDevOpsPatToken": {
              "type": "secureString",
              "defaultValue": ""
            },
            "gitHubClientId": {
              "type": "string",
              "defaultValue": ""
            },
            "gitHubClientSecret": {
              "type": "secureString",
              "defaultValue": ""
            },
            "webServiceURL": {
              "type": "string",
              "defaultValue": ""
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2018-11-01",
              "name": "[parameters('webSiteName')]",
              "location": "[parameters('location')]",
              "kind": "app",
              "tags": {
                "displayName": "Web Service Webapp"
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "name": "[parameters('webSiteName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
                "httpsOnly": true,
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('applicationInsightsInstrumentationKey')]"
                    },
                    {
                      "name": "AppSettings:KeyVaultURL",
                      "value": "[format('https://{0}.vault.azure.net/', parameters('keyVaultName'))]"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountConfigurationString",
                      "value": "[parameters('storageConnectionString')]"
                    },
                    {
                      "name": "AppSettings:AzureDevOpsPatToken",
                      "value": "[parameters('azureDevOpsPatToken')]"
                    },
                    {
                      "name": "AppSettings:GitHubClientId",
                      "value": "[parameters('gitHubClientId')]"
                    },
                    {
                      "name": "AppSettings:GitHubClientSecret",
                      "value": "[parameters('gitHubClientSecret')]"
                    },
                    {
                      "name": "ASPNETCORE_ENVIRONMENT",
                      "value": "Development"
                    },
                    {
                      "name": "AppSettings:WebServiceURL",
                      "value": "[parameters('webServiceURL')]"
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "url": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('webSiteName'))).defaultHostName)]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('appInsightsName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('managedIdentityName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('storageName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deployment', variables('websiteName'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "webSiteName": {
            "value": "[variables('websiteName')]"
          },
          "hostingPlanName": {
            "value": "[variables('hostingName')]"
          },
          "managedIdentityId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('managedIdentityName')))).outputs.userAssignedManagedIdentityId.value]"
          },
          "applicationInsightsInstrumentationKey": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('appInsightsName')))).outputs.applicationInsightsInstrumentationKeyOutput.value]"
          },
          "webServiceURL": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('serviceName')))).outputs.url.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "11929086677771076163"
            }
          },
          "parameters": {
            "webSiteName": {
              "type": "string"
            },
            "hostingPlanName": {
              "type": "string"
            },
            "managedIdentityId": {
              "type": "string"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string"
            },
            "storageConnectionString": {
              "type": "string",
              "defaultValue": ""
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureDevOpsPatToken": {
              "type": "secureString",
              "defaultValue": ""
            },
            "gitHubClientId": {
              "type": "string",
              "defaultValue": ""
            },
            "gitHubClientSecret": {
              "type": "secureString",
              "defaultValue": ""
            },
            "webServiceURL": {
              "type": "string",
              "defaultValue": ""
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2018-11-01",
              "name": "[parameters('webSiteName')]",
              "location": "[parameters('location')]",
              "kind": "app",
              "tags": {
                "displayName": "Web Service Webapp"
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "name": "[parameters('webSiteName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
                "httpsOnly": true,
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('applicationInsightsInstrumentationKey')]"
                    },
                    {
                      "name": "AppSettings:KeyVaultURL",
                      "value": "[format('https://{0}.vault.azure.net/', parameters('keyVaultName'))]"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountConfigurationString",
                      "value": "[parameters('storageConnectionString')]"
                    },
                    {
                      "name": "AppSettings:AzureDevOpsPatToken",
                      "value": "[parameters('azureDevOpsPatToken')]"
                    },
                    {
                      "name": "AppSettings:GitHubClientId",
                      "value": "[parameters('gitHubClientId')]"
                    },
                    {
                      "name": "AppSettings:GitHubClientSecret",
                      "value": "[parameters('gitHubClientSecret')]"
                    },
                    {
                      "name": "ASPNETCORE_ENVIRONMENT",
                      "value": "Development"
                    },
                    {
                      "name": "AppSettings:WebServiceURL",
                      "value": "[parameters('webServiceURL')]"
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "url": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('webSiteName'))).defaultHostName)]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('appInsightsName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('managedIdentityName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('storageName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('serviceName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deployment', variables('functionName'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "webSiteName": {
            "value": "[variables('functionName')]"
          },
          "hostingPlanName": {
            "value": "[variables('hostingName')]"
          },
          "applicationInsightsInstrumentationKey": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('appInsightsName')))).outputs.applicationInsightsInstrumentationKeyOutput.value]"
          },
          "storageConnectionString": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('storageName')))).outputs.storageAccountConnectionString.value]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "azureDevOpsPatToken": {
            "value": "[parameters('azureDevOpsPatToken')]"
          },
          "gitHubClientId": {
            "value": "[parameters('gitHubClientId')]"
          },
          "gitHubClientSecret": {
            "value": "[parameters('gitHubClientSecret')]"
          },
          "webServiceURL": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('serviceName')))).outputs.url.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "13971702146700889583"
            }
          },
          "parameters": {
            "webSiteName": {
              "type": "string"
            },
            "hostingPlanName": {
              "type": "string"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string"
            },
            "webServiceURL": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "storageConnectionString": {
              "type": "string"
            },
            "azureDevOpsPatToken": {
              "type": "string"
            },
            "gitHubClientId": {
              "type": "string"
            },
            "gitHubClientSecret": {
              "type": "secureString"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2018-11-01",
              "name": "[parameters('webSiteName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "tags": {
                "displayName": "Function"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
                "httpsOnly": true,
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('applicationInsightsInstrumentationKey')]"
                    },
                    {
                      "name": "AppSettings:WebServiceURL",
                      "value": "[parameters('webServiceURL')]"
                    },
                    {
                      "name": "AppSettings:KeyVaultURL",
                      "value": "[format('https://{0}.vault.azure.net/', parameters('keyVaultName'))]"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountConfigurationString",
                      "value": "[parameters('storageConnectionString')]"
                    },
                    {
                      "name": "AppSettings:AzureDevOpsPatToken",
                      "value": "[parameters('azureDevOpsPatToken')]"
                    },
                    {
                      "name": "AppSettings:GitHubClientId",
                      "value": "[parameters('gitHubClientId')]"
                    },
                    {
                      "name": "AppSettings:GitHubClientSecret",
                      "value": "[parameters('gitHubClientSecret')]"
                    },
                    {
                      "name": "AzureStorageAccountContainerAzureDevOpsBuilds",
                      "value": "DevOpsAzureDevOpsBuilds"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountContainerAzureDevOpsPRs",
                      "value": "DevOpsAzureDevOpsPRs"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountContainerAzureDevOpsPRCommits",
                      "value": "DevOpsAzureDevOpsPRCommits"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountContainerAzureDevOpsSettings",
                      "value": "DevOpsAzureDevOpsSettings"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountContainerGitHubRuns",
                      "value": "DevOpsGitHubRuns"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountContainerTableLog",
                      "value": "DevOpsLog"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountContainerChangeFailureRate",
                      "value": "DevOpsChangeFailureRate"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountContainerMTTR",
                      "value": "DevOpsMTTR"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountContainerGitHubSettings",
                      "value": "DevOpsGitHubSettings"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountContainerGitHubPRCommits",
                      "value": "DevOpsGitHubPRCommits"
                    },
                    {
                      "name": "AppSettings:AzureStorageAccountContainerGitHubPRs",
                      "value": "DevOpsGitHubPRs"
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('appInsightsName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('storageName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Deployment', variables('serviceName')))]"
      ]
    }
  ]
}