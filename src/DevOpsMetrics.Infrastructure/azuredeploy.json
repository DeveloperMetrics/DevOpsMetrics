{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceLocation": {
      "defaultValue": "eastus",
      "type": "String"
    },
    "storageName": {
      "defaultValue": "devopsmetricsprodeustore",
      "type": "String"
    },
    "hostingName": {
      "defaultValue": "devops-prod-eu-hosting",
      "type": "String"
    },
    "appInsightsName": {
      "defaultValue": "devops-prod-eu-appinsights",
      "type": "String"
    },
    "websiteName": {
      "defaultValue": "devops-prod-eu-web",
      "type": "String"
    },
    "serviceName": {
      "defaultValue": "devops-prod-eu-service",
      "type": "String"
    },
    "functionName": {
      "defaultValue": "devops-prod-eu-function",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-01-01",
      "name": "[parameters('storageName')]",
      "location": "[parameters('resourceLocation')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "largeFileSharesState": "Disabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default/AzureDevOpsBuilds')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default/AzureDevOpsPRCommits')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default/AzureDevOpsPRs')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default/AzureDevOpsSettings')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default/ChangeFailureRate')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default/GitHubPRCommits')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default/GitHubPRs')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default/GitHubRuns')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default/GitHubSettings')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default/Log')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageName'), '/default/MTTR')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('hostingName')]",
      "location": "East US",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "size": "S1",
        "family": "S",
        "capacity": 1
      },
      "kind": "app",
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('resourceLocation')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('functionName')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('functionName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('functionName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {},
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('serviceName')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingName'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('serviceName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('serviceName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {},
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('serviceName'), '/staging')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('serviceName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingName'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {},
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/slots/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('serviceName'), '/staging/web')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/slots', parameters('serviceName'), 'staging')]",
        "[resourceId('Microsoft.Web/sites', parameters('serviceName'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$devops-prod-eu-service__staging",
        "azureStorageAccounts": {},
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('websiteName')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingName'))]"
      ],
      "kind": "app",
      "identity": {
        "principalId": "f1b00114-3e9b-45c8-bc18-b549fa041143",
        "tenantId": "538cf6fd-f5d4-4451-8e4a-88c34f2f2619",
        "type": "SystemAssigned"
      },
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('websiteName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('websiteName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {},
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('websiteName'), '/staging')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('websiteName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingName'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {},
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/slots/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('websiteName'), '/staging/web')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/slots', parameters('websiteName'), 'staging')]",
        "[resourceId('Microsoft.Web/sites', parameters('websiteName'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$devops-prod-eu-web__staging",
        "azureStorageAccounts": {},
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    }
  ]
}